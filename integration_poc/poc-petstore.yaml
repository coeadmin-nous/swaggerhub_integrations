{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "poc-petstore",
    "description" : "Demo  poc for Swagger lab ",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/NOUS_EI/poc-petstore/1.0.0",
    "description" : "SwaggerHub API Auto Mocking"
  } ],
  "tags" : [ {
    "name" : "pet",
    "description" : "Everything about your Pets",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "http://swagger.io"
    }
  } ],
  "paths" : {
    "/pet" : {
      "put" : {
        "tags" : [ "pet" ],
        "summary" : "Update an existing pet",
        "operationId" : "updatePet",
        "responses" : {
          "200" : {
            "description" : "Pet information updated"
          },
          "404" : {
            "description" : "Pet not found"
          },
          "405" : {
            "description" : "Validation exception"
          }
        }
      },
      "post" : {
        "tags" : [ "pet" ],
        "summary" : "Add a new pet to the store",
        "operationId" : "addPet",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Pet"
        },
        "responses" : {
          "201" : {
            "description" : "Resource Created"
          }
        },
        "security" : [ {
          "petstore_auth" : [ "write:pets", "read:pets" ]
        } ]
      }
    },
    "/pet/findByStatus" : {
      "get" : {
        "tags" : [ "pet" ],
        "summary" : "Finds Pets by status",
        "description" : "Multiple status values can be provided with comma separated strings",
        "operationId" : "findPetsByStatus",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "Status values that need to be considered for filter",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "default" : "available",
              "enum" : [ "available", "pending", "sold" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Pet"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Pet"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid status value"
          }
        }
      }
    },
    "/pet/{petId}" : {
      "delete" : {
        "tags" : [ "pet" ],
        "summary" : "Deletes a pet",
        "operationId" : "deletePet",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "petId",
          "in" : "path",
          "description" : "Pet id to delete",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Pet info deleted"
          },
          "404" : {
            "description" : "Pet not found"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Pet" : {
        "required" : [ "name", "photoUrls" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "category" : {
            "$ref" : "#/components/schemas/Category"
          },
          "name" : {
            "type" : "string",
            "example" : "doggie"
          },
          "photoUrls" : {
            "type" : "array",
            "xml" : {
              "name" : "photoUrl",
              "wrapped" : true
            },
            "items" : {
              "type" : "string"
            }
          },
          "tags" : {
            "type" : "array",
            "xml" : {
              "name" : "tag",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/Tag"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "pet status in the store",
            "enum" : [ "available", "pending", "sold" ]
          }
        },
        "xml" : {
          "name" : "Pet"
        }
      },
      "Category" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Category"
        }
      },
      "Tag" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          }
        },
        "xml" : {
          "name" : "Tag"
        }
      }
    },
    "requestBodies" : {
      "Pet" : {
        "description" : "Pet object that needs to be added to the store",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Pet"
            }
          },
          "application/xml" : {
            "schema" : {
              "$ref" : "#/components/schemas/Pet"
            }
          }
        },
        "required" : true
      }
    },
    "securitySchemes" : {
      "petstore_auth" : {
        "type" : "oauth2",
        "flows" : {
          "implicit" : {
            "authorizationUrl" : "http://dummyauthurl",
            "scopes" : {
              "write:pets" : "modify pets in your account",
              "read:pets" : "read your pets"
            }
          }
        }
      }
    }
  }
}